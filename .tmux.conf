# Global stuff ============================={{{

# Change C-B to C-Space
unbind C-B
set -g prefix C-Space

# Start numbering tags at 1
set -g base-index 1

# tmux display things in 256 colors
#set -g default-terminal "tmux-256color-italic"
#set -g default-terminal "rxvt-unicode-256color"
set -g default-terminal "screen-256color"

# Color current pane
set-option -g window-style 'bg=colour0'
#set-option -g window-active-style 'bg=colour234'

# enable terminal compability
set-option -ga terminal-overrides ",tmux-256color-italic:Tc"

# Faster command sequences
set -s escape-time 0

# Automatically renumber window numbers on closing a pane (tmux >= 1.7).
set -g renumber-windows on

# Run pipes-vertical if there's no action in 300 seconds
#set -g lock-after-time 500
#set -g lock-command "~/bin/ascii/pipes-vertical -p 5 -R"

# Don't automatic rename windows
set-window-option -g automatic-rename on
set-option -g allow-rename on

#}}}
# Copy things =============================={{{

bind-key Escape copy-mode			# enter copy mode; default [
bind-key C-v paste-buffer				# paste; (default hotkey: ] )
bind-key P choose-buffer 			# tmux clipboard history
bind-key + delete-buffer \; display-message "Deleted current Tmux Clipboard History"


# Send To Tmux Clipboard or System Clipboard
bind-key < run-shell "tmux set-buffer -- \"$(xsel -o -b)\"" \; display-message "Copy To Tmux Clipboard"
bind-key > run-shell 'tmux show-buffer | xsel -i -b' \; display-message "Copy To System Clipboard"

# set the current tmux version (use this variable on if-shell commands)
run-shell "tmux set-environment -g TMUX_VERSION $(tmux -V | cut -c 6-)"

# vim copy mode rebinds for (tmux 2.4+)
# https://shapeshed.com/custom-vim-bindings-in-tmux-2-4/
# https://github.com/tmux/tmux/issues/754#issuecomment-303156000
# https://stackoverflow.com/a/40902312
# Note: rectangle-toggle (aka Visual Block Mode) > hit v then C-v to trigger it
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
  'bind-key -T copy-mode-vi v send-keys -X begin-selection; \
  bind-key -T copy-mode-vi V send-keys -X select-line; \
  bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle; \
  bind-key -T choice-mode-vi h send-keys -X tree-collapse ; \
  bind-key -T choice-mode-vi l send-keys -X tree-expand ; \
  bind-key -T choice-mode-vi H send-keys -X tree-collapse-all ; \
  bind-key -T choice-mode-vi L send-keys -X tree-expand-all ; \
  bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "xclip -in -selection clipboard"; \
  bind-key -T copy-mode-vi C-c send-keys -X copy-pipe "xclip -in -selection clipboard"'
#}}}
# Visual configuration ====================={{{

# refresh the status bar every 1 second.
set-option -g status-interval 1

# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

set-option -g status "on"

# Default statusbar colors
#set-option -g status-bg colour0 #bg1
#set-option -g status-fg colour195 #fg1

# Default window title colors
#set-window-option -g window-status-bg colour35
#set-window-option -g window-status-fg colour235 #bg1

#set-window-option -g window-status-activity-bg colour235 #bg1
#set-window-option -g window-status-activity-fg colour227 #fg3

# Active window title colors
#set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-fg colour0 #bg1

# pane divider color; active pane
# helps when you have more than two panes.
# version 1.8 makes it easy to see 2 panes now
#set-option -g pane-active-border-fg colour223 #fg2
#set-option -g pane-border-fg colour235 #bg1

# Message infos
set-option -g message-bg colour240 #bg2
set-option -g message-fg colour223 #fg1

# Writting commands inactive
set-option -g message-command-bg colour239 #fg3
set-option -g message-command-fg colour223 #bg1

# Pane number display
#set-option -g display-panes-active-colour colour223 #fg2
#set-option -g display-panes-colour colour242 #bg1

# Clock
set-window-option -g clock-mode-colour colour109 #blue

# Bell
set-window-option -g window-status-bell-style fg=colour235,bg=colour167 #bg, red

# Theme settings mixed with colors (unfortunately, but there is no cleaner way)
#set-option -g status-attr "none"
#set-option -g status-justify "left"
#set-option -g status-left-attr "none"
#set-option -g status-left-length "80"
#set-option -g status-right-attr "none"
#set-option -g status-right-length "100"

set -g status-justify centre
set -g status-style "bg=black"
set -ag status-style "fg=white"

set-window-option -g window-status-activity-attr "none"
set-window-option -g window-status-attr "none"
set-window-option -g window-status-separator " "

#W  = Tmux window name
#I  = Tmux window number
#F  = '*' display in the active window
#h  = Computer host name
#S  = Tmux session name
#set -g status-left "#[fg=colour248,bg=colour0] #S "
#set -g status-right "#{?client_prefix,#[fg=colour75]#[reverse] @ #[noreverse],#[fg=colour1]} #[fg=red,dim,bg=default,bright]#(~/bin/tmux-spotify both) #[fg=colour4]#(cut -d' ' -f1-3 /proc/loadavg) #[fg=white]| #[fg=colour14,bg=default]%a, %H:%M:%S #[fg=white]| #[fg=colour30,bg=default,bright]%d/%m/%Y "

set -g status-left ""
set -g status-right ""
setw -g window-status-format " #[fg=colour12]#W    "
setw -g window-status-current-format " #[fg=colour195]#W    "

#setw -g window-status-format "#[fg=colour195]#[bg=colour240] #I:#[bg=colour240]#[fg=colour195] #W "
#setw -g window-status-current-format "#[bg=colour35]#[fg=colour235,bold] #I:#[fg=colour235,bold]#[bg=colour35] #W "

# }}}
# Mouse mode ==============================={{{

# mouse to highlight and copy; to paste use prefix + ]
# http://awhan.wordpress.com/2012/04/18/tmux-copy-paste-with-mouse/

# temporarily allow regular terminal copy mode while mouse mode is enable
# visual line:  shift+mouse
# visual block: ctrl+shift+mouse <-- only works on some terminals
# visual block: ctrl+mouse <-- (while mouse mode is disable) only works on some terminals

# toggle mouse mode (tmux 2.1 or higher)
# https://www.reddit.com/r/tmux/comments/3paqoi/tmux_21_has_been_released/cw552qd
bind-key m set-option -g -q mouse on \; display-message 'Mouse: ON'
bind-key M set-option -g -q mouse off \; display-message 'Mouse: OFF'

# }}}
# Layouts =================================={{{
# demo video: http://www.youtube.com/watch?v=sxw-n5Du600
# http://amjith.blogspot.com/2011/08/scripting-tmux-layouts.html
# http://unix.stackexchange.com/a/17118
# -v = split horizontal
# -h = split veritical

# Main layout to floating WM
#bind-key M-a send-keys "tmux rename-window -t 1 chat && clear && weechat-curses" 'Enter' \; \
#	new-window -n mail -c $HOME \; \
#	send-keys -t mail 'neomutt' 'Enter' \; \
#	new-window -n ranger -c $HOME \; \
#	send-keys -t ranger 'ranger' 'Enter' \; \
#	new-window -n 'rss' -c $HOME \; \
#	send-keys -t 'rss' 'newsboat' 'Enter' \; \
#	new-window -n torrent -c $HOME \; \
#	send-keys -t torrent 'transmission-remote-cli' 'Enter'\; \
#	split-window -t torrent -v -p 63 \; \
#	send-keys -t torrent 'tpb ' \; \
#	split-window -t torrent -h \; \
#	send-keys -t torrent 'ranger ~/Downloads/torrents' 'Enter' \; \
#	new-window -n todo -c $HOME \; \
#	send-keys -t todo 'sleep 30 && bin/todo-notify 'todo' && todo -s' 'Enter'

# Main layout to tiling wm
bind-key M-a new-window -n 'rss' -c $HOME \; \
	send-keys -t 'rss' 'newsboat' 'Enter' \; \
	new-window -n torrent -c $HOME \; \
	send-keys -t torrent 'tsm-start && transmission-remote-cli' 'Enter'\; \
	split-window -t torrent -v -p 63 \; \
	send-keys -t torrent 'tpb ' \; \
	split-window -t torrent -h \; \
	send-keys -t torrent 'ranger ~/Downloads/torrents' 'Enter' \; \
	new-window -n todo -c $HOME \; \
	send-keys -t todo 'sleep 30 && bin/todo-notify 'todo' && todo -s' 'Enter'

bind-key M-w new-window -n work -c $HOME \; \
	send-keys -t work 'vim' 'Enter'\; \
	split-window -t work -fv -p 27 -c "#{pane_current_path}" \; \
	send-keys -t work 'clear && cdfac' 'Enter' \; \
	split-window -t work -h -p 27 -c "#{pane_current_path}" \; \
	send-keys -t work 'tmux clock-mode' 'Enter'

# Info
bind-key M-f new-window -n fm -c $HOME \; \
	send-keys -t fm 'clear && figlet system info' 'Enter' \; \
	split-window -t fm \; \
	send-keys -t fm 'htop' 'Enter' \; \
	split-window -t fm -fh -p 27 -c "#{pane_current_path}" \; \
	send-keys -t fm 'tmux clock-mode' 'Enter'

# }}}
# Keybindings =============================={{{

# Set keybindings as vim like
set-window-option -g mode-keys vi

# Video: http://www.youtube.com/watch?v=guB4WuVFhtY
# Urlviewer; grab links from any tmux window/pane and open it with external apps
# https://wiki.archlinux.org/index.php/Tmux#Browsing_URL.27s
bind-key u capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n "urlview" '$SHELL -c "urlview < /tmp/tmux-buffer"'

# reload config
bind-key r source-file ~/.tmux.conf \; display-message "Configuration reloaded"

# edit tmux config
bind-key e new-window -n 'conf' '${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display "~/.tmux.conf sourced"'

# split pane (tmux 1.9+)
bind-key \ split-window -h -c "#{pane_current_path}"	# vertical split (default prefix-%)
bind-key - split-window -v -c "#{pane_current_path}"	# horizontal split (default prefix-")

# split full window (tmux 2.3+)
bind-key | split-window -fh -c "#{pane_current_path}"
bind-key _ split-window -fv -c "#{pane_current_path}"

# Vim-like key bindings for pane navigation (default uses cursor keys)
unbind h
bind h select-pane -L
unbind j
bind j select-pane -D
unbind k
bind k select-pane -U
unbind l # normally used for last-window
bind l select-pane -R

# resize panes
bind-key -r J resize-pane -D 1
bind-key -r K resize-pane -U 1
bind-key -r H resize-pane -L 1
bind-key -r L resize-pane -R 1

# cycle windows/panes (no prefix)
bind-key -n M-k select-pane -t :.-	# prev pane
bind-key -n M-j select-pane -t :.+	# next pane
bind-key -n M-h select-window -t :-	# previous window
bind-key -n M-l select-window -t :+	# next window

# sync panes; send what you are typing to other panes
bind-key C-s set-window-option synchronize-panes

bind-key y capture-pane \; save-buffer /tmp/tmux-buffer \; \
	new-window -n "w3m" '$SHELL -c "w3m < /tmp/tmux-buffer"'

# clear screen and scrollback history
bind-key -n C-l send-keys C-l \; run 'tmux clear-history'

# prefix C-a to switch to the last window
bind-key C-a last-window

# new window with the current path (tmux 1.9+)
bind-key c new-window -c "#{pane_current_path}"

# swap windows/panes
bind-key -n M-Left swap-window -t -1
bind-key -n M-Right swap-window -t +1

# kill window/pane without confirmation
# http://unix.stackexchange.com/a/30283
bind-key & kill-window
bind-key x kill-pane

bind-key -T copy-mode-vi 'u' send-keys -X copy-selection \; new-window -n youtube \; send-keys -t youtube 'mpsyt /"$(tmux show-buffer)" && tmux kill-window' 'Enter'
bind-key -T copy-mode-vi 'i' send-keys -X copy-selection \; new-window -n imagegoogle \; send-keys -t imagegoogle 'surfraw imagesgoogle "$(tmux show-buffer)" && tmux kill-window' 'Enter'
bind-key -T copy-mode-vi 'g' send-keys -X copy-selection \; new-window -n google \; send-keys -t google 'surfraw google "$(tmux show-buffer)" && tmux kill-window' 'Enter'
bind-key -T copy-mode-vi 'p' send-keys -X copy-selection \; new-window -n wikipedia \; send-keys -t wikipedia 'sr wikipedia "$(tmux show-buffer)" && tmux kill-window' 'Enter'
bind-key -T copy-mode-vi 'u' send-keys -X copy-selection \; new-window -n youtube \; send-keys -t youtube 'mpsyt /"$(tmux show-buffer)" && tmux kill-window' 'Enter'
bind-key -T copy-mode-vi 'O' send-keys -X copy-selection \; new-window -n w3m \; send-keys -t w3m 'w3m "$(tmux show-buffer)" && tmux kill-window' 'Enter'

# translate, dictionary, text to speech
bind-key -T copy-mode-vi 't' send-keys -X copy-selection \; new-window -n translate \; send-keys -t translate 'trans :pt "$(tmux show-buffer)" | w3m && tmux kill-window' 'Enter'
bind-key -T copy-mode-vi 'd' send-keys -X copy-selection \; new-window -n dict \; send-keys -t dict 'trans -d "$(tmux show-buffer)" | w3m && tmux kill-window' 'Enter'
bind-key -T copy-mode-vi 's' send-keys -X copy-selection \; new-window -n speak \; send-keys -t speak 'trans -brief "$(tmux show-buffer)" -play && tmux kill-window' 'Enter'

bind-key -n 'M-\' new-window -n locate \; send-keys -t locate "fzf-locate && tmux kill-window\n"
bind-key -n 'C-\' new-window -n bookmarks -c $HOME \; \
    send-keys 'fzf-surfraw && tmux kill-window' 'Enter'

# use vim as copy mode
bind-key v capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n "vim-copymode" '$SHELL -c "vim /tmp/tmux-buffer"'

# ask user to input window number they wish to swap with
# references: https://stackoverflow.com/questions/33396831/how-to-force-tmux-to-wait-for-output-from-command-prompt
# bind T command-prompt -p "Swap current window with?:" "swap-window -t '%1'"
bind-key S command-prompt -p "Swap current pane with?:" "swap-pane -t '%1'"

# }}}
# Test ====================================={{{

# }}}


# wm independent hotkeys {{{

# terminal emulator
super + Return
	st -g 79x20

# program launcher
super + @space
	dmenu_run -i -fn 'iosevka Nerd Font:size=11' -p ' Search  ' -nb '#2f343f' -nf '#e7e8eb' -sb '#81A1C1' -sf '#2f343f'

# make sxhkd reload its configuration files:
super + shift + c
	pkill -USR1 -x sxhkd

# }}}
# bspwm hotkeys {{{

# quit bspwm normally
super + alt + Escape
	bspc quit

# close and kill
super + {_,shift + }q
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest node
super + g
	bspc node -s biggest

# }}}
# state/flags {{{

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

# }}}
# focus/swap {{{

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the next/previous node in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

# }}}
# preselect {{{

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

# }}}
# move/resize {{{

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

# }}}

##########################
# User bindings
##########################

# Open st with tmux
super + shift + Return
    st -e tmux

# Reload bspwm
super + F5
    ~/.config/bspwm/bspwmrc

# cmus-status script
super + c
	$HOME/bin/cmus-status

## Browser and Telegram
super + shift + {b,t}
	{$BROWSER 2>&-,Telegram 2>&-}

# Reboot system
super + shift + BackSpace
    $HOME/bin/prompt "Are you sure you want to reboot?" "$reboot"

# Screenshot (copying to clipboard)
super + s
    scrot -e 'xclip -selection clipboard -t image/png $f && rm -f $f'
super + shift + s
    scrot -se 'xclip -selection clipboard -t image/png $f && rm -f $f'

# Screenshot (saving to some directory)
super + Print
    scrot -e 'mv $f ~/Pictures/scrot' && sleep 1 && exec notify-send 'screenshot has been saved in ~/Pictures/scrot'
super + shift + Print
    scrot -se 'mv $f ~/Pictures/scrot/' && sleep 1 && exec notify-send 'screenshot has been saved in ~/Pictures/scrot'

# Open Neomutt/Newsboat
super + n
    st -n neomutt -c neomutt -e neomutt
super + shift + n
    st -n newsboat -c newsboat -e newsboat

# Weechat/dmoji script
super + w
    st -n weechat -c weechat -e weechat-curses
super + shift + w
    st -n weechat -c weechat -e weechat-curses

# Turn off the sound and stop cmus
super + x
    amixer sset Master mute ; cmus-remote --stop

# Shutdown computer
super + shift + x
    $HOME/bin/prompt "Are you sure you want to shutdown?" "sudo poweroff -h now"

# Media {{{
# For cmus
set $music "st tmux new-window -t dropdown && tmux send-keys -t dropdown cmus 'Enter'"

# Mute sound
super + F8
    amixer sset Master toggle

# Conflited
#super + m
    #exec $music

# Deprecated
#super + shift + m
    #tmux split-window -t dropdown -v && tmux send-keys -t dropdown 'cmus-lyrics | less' 'Enter'

# Play a song on cmus
super + p
    cmus-remote --play

# Pause a song on cmus
super + shift + p
    cmus-remote --pause

# Increase/dicrease sound
super + {minus, equal}
    amixer sset Master 2%{-,+}

# Increase a lot the sound
super + shift + {minus, equal}
    amixer sset Master 5%{-,+}

# {Previous,Next} music
super + {comma, period}
    cmus-remote {--prev, --next} && pkill dunst && cmus-status

# When you're watching educational videos and someone comes up to you:
# It mutes your sound, goes to another workspace with vim and ranger opened to pretend you are doing something
super + shift + Delete
    amixer sset Master mute ; workspace '' ; st -e zathura vim ~/.vimrc ; exec $term -e ranger

# }}}
